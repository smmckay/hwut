The task of a test program is to allow a judgement about the software under
test: does it perform correctly or not. In the author's philosophy such a
judgement must be based on _visibility_. That means that important things that
are influenced by a program must be made visible, i.e. there must be functions
under the hood that print important things in a very nice and transparent
manner. The output of those functions shall allow the developper or tester to
judge quickly if everything is correct and to feel pleasure about getting clear
insights into his software's inner mechanisms.

A test then consists out of calls to a software's API functions and to printing
functions that display the system status. When eventually, a developper decides
that a program's output is correct he can store it as 'good' and as such it will
be a reference for any later tests. Later tests consist simply in executions
of the test program and the comparison of its output with the output
that has been stamped as 'good'.
